---
title: "Dashboard: Archived CRAN Packages"
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)

max_days <- 4*7
```

CRAN packages are often archived and equally often after being taken off CRAN they can be brought up to CRAN.

This dashboard updates with the latest `{r} max_days` days of CRAN archived or unarchived packages from [PACKAGES.in] the CRAN Team uses to document this process.

To avoid being archived, make sure to fix any package issues in time.
If you don't think you can reach the deadline you got, you might be
able to convince the CRAN maintainers to extend the deadline. It is
also useful to review [CRAN Repository Policy] once in a while to stay
up to date with the CRAN requirements.

If your package has already been archived, you can get back to CRAN by fixing the issues pointed on the initial email, as well as any other new issue that might show up.
Check the package before sending it and explain to the volunteers how you fixed it.
If you have problems you don't know how to solve, you can search for a solution in the r-package-devel mailing list and ask there for help with the package development 

```{r}
library("dplyr")
logic2string <- function(x){
  y <- NA
  y[x] <- "yes"
  y[!x] <- "no"
  y
}
url <- "https://cran.r-project.org/src/contrib/PACKAGES.in"
con <- url(url)
file <- read.dcf(con) |> 
  as.data.frame()

# Extract multiline comments
comments_l <- lapply(file$`X-CRAN-Comment`, function(x) {
  unlist(strsplit(x, "[\n]+"), FALSE, FALSE)
})
comments_c <- unlist(comments_l)
df <- data.frame(package = rep(file$Package, lengths(comments_l)),
           comment = comments_c)
regex_date <- "([0-9]{4}-[0-9]{2}-[0-9]{2})"
regex_action <- "([Uu]narchived?|[Aa]rchived?|[Rr]enamed?|[Oo]rphaned?|[Rr]eplaced?|[Rr]emoved?)"
comments_df <- cbind(df, 
           strcapture(pattern = regex_date, x = df$comment, 
                      proto = data.frame(date = Sys.Date()[0])),
           strcapture(pattern = regex_action, x = df$comment,
                      proto = data.frame(action = character()))
           ) |> 
  filter(!is.na(comment)) |> 
  mutate(action = tolower(action))
# Check that count(comments_df, !is.na(date), !is.na(action), sort = TRUE) makes sense
# Handle rolled and no keyword used
comments_df$action[!is.na(comments_df$date) & is.na(comments_df$action)] <- "archived"

# filter(comments_df, !is.na(action) & is.na(date)) |> View("a")
# filter(comments_df, is.na(action) & is.na(date)) |> View("b")
# Handle CRAN-history
history_l <- lapply(file$`X-CRAN-History`, function(x) {
  unlist(strsplit(x, "[\n]+"), FALSE, FALSE)
})
history_c <- unlist(history_l)

history_df <- data.frame(package = rep(file$Package, lengths(history_l)),
                    comment = history_c) |> 
  filter(!is.na(comment))

history_df <- cbind(history_df,
                    strcapture(pattern = regex_date, x = history_df$comment, 
                               proto = data.frame(date = Sys.Date()[0])),
                    strcapture(pattern = regex_action, x = history_df$comment,
                               proto = data.frame(action = character()))
           ) |> 
  mutate(action = tolower(action))
history_df$action[grep("Back on CRAN", history_df$comment, ignore.case = TRUE)] <- "unarchived"
library("reactable")
history <- rbind(comments_df, history_df) |> 
  mutate(action = gsub(pattern = "e$", replacement = "ed", action)) |> 
  arrange(package) |>
  relocate(date) |>
  relocate(comment, .after = last_col()) |>
  filter(action %in% c("archived", "unarchived"),
         !is.na(date),
         !is.na(action)) 


# Show only recent packages
history |> 
  filter(date > (Sys.Date() - max_days)) |>
  reactable(
    columns = list(
      action = colDef(style = function(value) {
        colours <- list("unarchived" = "green")
        if (value %in% names(colours)) {
          list(background = colours[[value]])
        } else {
          list()
        }
      })),
    defaultSorted = list("date" = "desc", "package" = "asc"),
    filterable = TRUE,
    defaultPageSize = 50)
```

[CRAN Repository Policy]: https://cran.r-project.org/web/packages/policies.html
[PACKAGES.in]: https://cran.r-project.org/src/contrib/PACKAGES.in
